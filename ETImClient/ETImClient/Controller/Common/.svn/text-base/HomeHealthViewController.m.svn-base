//
//  HomeHealthViewController.m
//  HM-HEALTH
//
//  Created by apple on 14-5-26.
//  Copyright (c) 2014年 PingAn. All rights reserved.
//

#import "HomeHealthViewController.h"
#import "NSHTTPCookieStorage+Web.h"
#import "JKAppDelegate.h"
#import "JKBloodPressureViewController.h"
#import "JKGlucoseViewController.h"
#import "JKTemperatureViewController.h"
#import "JKWeightViewController.h"
#import "JKQuickAskDoctorIndexViewController.h"
#import "JKChooseAreaViewController.h"
#import "JKOrderDoctorViewController.h"
#import "JKPedViewController.h"
#import "UIImage+Color.h"
#import "UIImage+Cut.h"
#import "MainViewController.h"
//#import "PluginConfig.h"
#import "YLListMenuCell.h"
#import "UserInfoModel.h"
#import "ASIHttpClient.h"
#import "JSONKit.h"
#import "JKMsgMainViewController.h"
#import "JKSimicalMainViewController.h"
#import "IndividualInfoViewController.h"
#import "JKBusinessInputView.h"
#import "BaseTabBarViewController.h"
#import "JKOrderUidController.h"
#import "JKMsgUtil.h"

@interface HomeHealthViewController ()<UITableViewDelegate, UITableViewDataSource, JKOrderUidDelegate>
{
    ///显示底部空白行数量
    int bottomNum;
    NSString *_loginToken;
    NSString *_goodenAccessToken;
    JKOrderUidController *_uidController;
}

@property (nonatomic, strong) NSMutableArray *dataSource;

@end

@implementation HomeHealthViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        self.title = @"健康宝";
        self.navigationItem.title = @"";
        [self.tabBarItem setFinishedSelectedImage:[UIImage imageNamed:@"tab_health_selected.png"] withFinishedUnselectedImage:[UIImage imageNamed:@"tab_health_unselect.png"]];
    }
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(showRedMsgBtn) name:@"HAVE_MSG" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(showNoMsgBtn) name:@"HAVE_NO_MSG" object:nil];
    return self;
}

- (void)dealloc {
    
    PALOG(@"home health dealloc");
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [self removeBgImageView];
    
    bottomNum = 1;
    
    if (!IOS7) {
        CGRect frame = self.listMenu.frame;
        frame.origin.y -= 40;
        frame.size.height += 40;
        [self.listMenu setFrame:frame];
        
        self.bgImage.image = [UIImage imageNamed:@"home_back_OS6"];
        self.bgImage.contentMode = UIViewContentModeBottom;
        
        bottomNum = 0;
    }
    
    self.dataSource = [[NSMutableArray alloc] initWithObjects:@"计步器", @"咕咚运动", @"健康检测", @"寻医问诊", @"预约挂号", nil];
//        self.dataSource = [[NSMutableArray alloc] initWithObjects:@"计步器", @"咕咚运动", @"健康检测", @"寻医问诊", nil];
    
    self.listMenu.backgroundColor = [UIColor clearColor];
    self.listMenu.backgroundView = nil;
    self.listMenu.separatorColor = [UIColor clearColor];
    
    self.listMenu.showsVerticalScrollIndicator = NO;
    
    [self setExtraCellLineHidden:self.listMenu];
    
#ifndef __NEW_VERSION__
    
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"nav_bar_login.png"] style:UIBarButtonItemStyleBordered target:self action:@selector(showLfet)];
    
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"nav_bar_message.png"] style:UIBarButtonItemStyleBordered target:self action:@selector(showMsg)];

    
    [self.navigationItem.leftBarButtonItem setTintColor:[UIColor whiteColor]];
    [self.navigationItem.rightBarButtonItem setTintColor:[UIColor whiteColor]];
#endif
    
    _loginToken = [[JKUserUtil currentUser] loginToken];
    
}

- (void)tokenDidUpdateSuccess {
    _loginToken = [[JKUserUtil currentUser] loginToken];
    //绑定咕咚手环到我们的后台
    [self updateCodoon:[[JKUserUtil currentUser] uid] codoonToken:_goodenAccessToken];
}
- (void)tokenDidUpdateFailure:(JKTokenStatusCode)status {
    //[self.view makeToast:@"loginToken请求异常！" duration:1.5 position:@"center"];
    [BaseTabBarViewController jumpToLogin];
}

-(void) showMsg{
    JKMsgMainViewController *msg  = [[JKMsgMainViewController alloc] init];
    msg.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:msg animated:YES];
}
- (void)viewWillAppear:(BOOL)animated
{
    NSString *isHavingMsg = [[NSUserDefaults standardUserDefaults] objectForKey:@"isHavingMsg"];
    if([isHavingMsg isEqualToString:@"Y"]){
        [self showRedMsgBtn];
    }else{
        [self showNoMsgBtn];
    }
    [self.navigationController.navigationBar setBackgroundImage:[UIImage new] forBarMetrics:UIBarMetricsDefault];
    
    self.navigationController.navigationBar.shadowImage = [UIImage new];
}

- (void)showLfet
{
#ifndef __NEW_VERSION__
    JKAppDelegate *delegate = (JKAppDelegate *)[UIApplication sharedApplication].delegate;
    [delegate.rootController showLeftController:YES];
#endif
}

- (void)setExtraCellLineHidden: (UITableView *)tableView{
    UIView *view =[ [UIView alloc]init];
    view.backgroundColor = [UIColor clearColor];
    [tableView setTableFooterView:view];
    [tableView setTableHeaderView:view];
}

- (IBAction)bloodClick:(id)sender {
    JKBloodPressureViewController *vc = [[JKBloodPressureViewController alloc] init];
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}
- (IBAction)gluoseClick:(id)sender {
    JKGlucoseViewController *vc = [[JKGlucoseViewController alloc] init];
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}
- (IBAction)temperatureClick:(id)sender {
    JKTemperatureViewController *vc = [[JKTemperatureViewController alloc] init];
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}
- (IBAction)weightClick:(id)sender {
    JKWeightViewController *vc = [[JKWeightViewController alloc] init];
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}

- (IBAction)loginExit:(id)sender {
    
    JKAppDelegate *appDelegate = (JKAppDelegate *)[[UIApplication sharedApplication] delegate];
    
    [appDelegate.rootController dismissViewControllerAnimated:YES completion:^{
        [[NSHTTPCookieStorage sharedHTTPCookieStorage] deleteUserLoginCookie];
        
    }];
    
}

#pragma mark - UITableViewDelegate
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [self.dataSource count] + bottomNum;
}

- (float)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 87;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row == [self.dataSource count]) {
        
        static NSString *blank = @"blank";
        
        UITableViewCell *blankCell = [tableView dequeueReusableCellWithIdentifier:blank];
        
        if (blankCell == nil) {
            
            blankCell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:blank];
            
            blankCell.selectionStyle = UITableViewCellSelectionStyleNone;
            blankCell.backgroundColor = [UIColor clearColor];
        }
        
        return blankCell;
    }
    
    
    static NSString *identify = @"identify";
    
    YLListMenuCell *cell = [tableView dequeueReusableCellWithIdentifier:identify];
    
    if (cell == nil) {
        
        NSArray *nibsArray=[[NSBundle mainBundle] loadNibNamed:@"YLListMenuCell" owner:self options:nil];
        
        cell=(YLListMenuCell*)[nibsArray objectAtIndex:0];
        
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        
        cell.backgroundColor = [UIColor clearColor];
    }
    
    if (indexPath.row != [self.dataSource count]) {
        
        cell.functionName.text = [self.dataSource objectAtIndex:indexPath.row];
        
        cell.functionImage.image = [UIImage imageNamed:[NSString stringWithFormat:@"%@.png", cell.functionName.text]];
    }
    
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    //功能点击次数收集
    [TalkingData trackEvent:@"Health" label:self.dataSource[indexPath.row]];
    
    UIViewController *vc = nil;
    switch (indexPath.row) {
        case 0:
        {
            //判断是否有个人信息
            if(![[JKUserUtil currentUser] profileFull]){
                IndividualInfoViewController *ivc = [[IndividualInfoViewController alloc] init];
                ivc.hidesBottomBarWhenPushed = YES;
                ivc.viewController = @"JKPedViewController";
                [self.navigationController pushViewController:ivc animated:YES];
                return;
            }
            //            vc = [[JKPedViewController alloc] init];
            vc = [JKPedViewController sharePedController];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
            break;
        case 1:{
//            PluginConfig *gudongConfig = [PluginConfig sharedInstance];
//            gudongConfig.codoonAccessToken = nil;//先置为空防止不同用户登录时存在缓存
//            gudongConfig.nickName = [[JKUserUtil currentUser] userName];
//            NSDate *date = [DateHelper dateFromStr:[[JKUserUtil currentUser] birthDay] type:DateFormatTypeShort];
//            int age = 1 + [date timeIntervalSinceNow] / (365 * 24 * 3600);
//            gudongConfig.age = age;
//            gudongConfig.gender = ([[[JKUserUtil currentUser] sex] isEqualToString:@"M"] ? 1:0);
//            gudongConfig.height = [[[JKUserUtil currentUser] height] intValue];
//            gudongConfig.weight = [[[JKUserUtil currentUser] weight] intValue];
//            gudongConfig.walking = 50;
//            gudongConfig.running = 80;
//            //获取咕咚token
//            NSString *codoonToken = [[JKUserUtil currentUser]  codoonToken];
//            if([codoonToken isEqualToString:@""]){//如果咕咚token不存在说明没绑定
//                [gudongConfig registLoginCallback:^(NSString *accessToken){
//                    //通过这里获取
//                    NSLog(@"成功获取accessToken：%@",accessToken);
//                    _goodenAccessToken = accessToken;
//                    gudongConfig.codoonAccessToken = _goodenAccessToken;
//                    //绑定咕咚手环到我们的后台
//                    [self updateCodoon:[[JKUserUtil currentUser] uid] codoonToken:_goodenAccessToken];
//                }];
//            }else{
//                gudongConfig.codoonAccessToken = codoonToken;
//            }
//            //判断是否有个人信息
//            if(![[JKUserUtil currentUser] profileFull]){
//                IndividualInfoViewController *ivc = [[IndividualInfoViewController alloc] init];
//                ivc.hidesBottomBarWhenPushed = YES;
//                ivc.viewController = @"MainViewController";
//                [self.navigationController pushViewController:ivc animated:YES];
//                return;
//            }
//            vc = [[MainViewController alloc] init];
//            [gudongConfig present:vc To:self];
        }
            break;
        case 2:
            //判断是否有个人信息
            if(![[JKUserUtil currentUser] profileFull]){
                IndividualInfoViewController *ivc = [[IndividualInfoViewController alloc] init];
                ivc.hidesBottomBarWhenPushed = YES;
                ivc.viewController = @"JKSimicalMainViewController";
                [self.navigationController pushViewController:ivc animated:YES];
                return;
            }
            vc = [[JKSimicalMainViewController alloc] init];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            break;
        case 3:
            //判断是否有企业圈
            if (![[[JKUserUtil currentUser] businessId] length]) {
                JKBusinessInputView *input = [[JKBusinessInputView alloc] initWithFrame:CGRectMake(0, kNavigationBarHeight + kStatusBarHeight, RECT_WIDTH(self.view), RECT_HEIGHT(self.view) - kNavigationBarHeight - kStatusBarHeight)];
                [self.view addSubview:input];
                return;
            }
            //判断是否有个人信息
            if(![[JKUserUtil currentUser] profileFull]){
                IndividualInfoViewController *ivc = [[IndividualInfoViewController alloc] init];
                ivc.hidesBottomBarWhenPushed = YES;
                ivc.viewController = @"JKQuickAskDoctorIndexViewController";
                [self.navigationController pushViewController:ivc animated:YES];
                return;
            }
            vc = [[JKQuickAskDoctorIndexViewController alloc] init];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            break;
        case 4:
            //判断是否有个人信息
            if(![[JKUserUtil currentUser] profileFull]){
                IndividualInfoViewController *ivc = [[IndividualInfoViewController alloc] init];
                ivc.hidesBottomBarWhenPushed = YES;
                ivc.viewController = @"JKChooseAreaViewController";
                [self.navigationController pushViewController:ivc animated:YES];
                return;
            }
            
            if ([[NSUserDefaults standardUserDefaults] objectForKey:@"JKYUYUEGUAHAOCITYDIC"]) {
                JKChooseAreaViewController* choose = [[JKChooseAreaViewController alloc] init];
                choose.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:choose animated:NO];
                
                JKOrderDoctorViewController* order = [[JKOrderDoctorViewController alloc] init];
                [self.navigationController pushViewController:order animated:YES];
            }else{
                JKChooseAreaViewController* choose = [[JKChooseAreaViewController alloc] init];
                choose.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:choose animated:YES];
            }

            break;
        default:
            //判断是否有个人信息
            if(![[JKUserUtil currentUser] profileFull]){
                IndividualInfoViewController *ivc = [[IndividualInfoViewController alloc] init];
                ivc.hidesBottomBarWhenPushed = YES;
                ivc.viewController = @"JKPedViewController";
                [self.navigationController pushViewController:ivc animated:YES];
                return;
            }
            vc = [JKPedViewController sharePedController];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
            break;
    }
}

-(void) updateCodoon:(NSString *)uid codoonToken:(NSString *)codoonToken{
    ASIHttpClient *asiHttpClient= [[ASIHttpClient alloc] initWithURL:@"/do/user/codoon" method:E_Post_Method];
    [asiHttpClient setStringEncoding:NSUTF8StringEncoding];
    NSDictionary *requestDic  = [NSDictionary dictionaryWithObjectsAndKeys:
                  uid, @"uid",
                  codoonToken, @"codoonToken",
                  _loginToken,@"logintoken",
                  nil];
    NSData *data = [requestDic JSONData];
    [asiHttpClient addRequestHeader:@"Content-Type" value:@"application/json"];
    [asiHttpClient appendPostData:data];
    [asiHttpClient startAsynchronous];
    __weak ASIHttpClient *client = asiHttpClient;
    __weak HomeHealthViewController *wself = self;
    [asiHttpClient setCompletionBlock:^{
        if (!wself) return;
        NSData *responseData = [client responseData];
        NSString *jsonStr = [[NSString alloc] initWithData:responseData encoding:NSUTF8StringEncoding];
        NSDictionary *dic = [jsonStr objectFromJSONString];
        NSString *resultCode = [dic objectForKey:@"status"];
        if([resultCode isEqualToString:@"00"]){
            NSLog(@"提交数据成功！");
        }else if([resultCode isEqualToString:@"-1"]){
            NSLog(@"服务器异常！");
        }else if([resultCode isEqualToString:@"01"]){
            NSLog(@"请求超时！");
            [self.tokenController requestLoginToken];
            self.tokenController.tokenDelegate = self;
        }else if([resultCode isEqualToString:@"02"]){
            NSLog(@"%@", [dic objectForKey:@"msg"]);
        }else{
            NSLog(@"网络异常！");
        }
    }];
    [asiHttpClient setFailedBlock :^{
        if (!wself) return;
        switch (client.error.code) {
            case ASIConnectionFailureErrorType:{
                NSLog(@"网络异常！");
            }
                break;
            case ASIRequestTimedOutErrorType:{
                NSLog(@"请求超时!");
            }
                break;
            default:{
                NSLog(@"请求失败！");
            }
                break;
        }
    }];
}


-(void) viewDidAppear:(BOOL)animated{
//      NSString *isHavingMsg = [[NSUserDefaults standardUserDefaults] objectForKey:@"isHavingMsg"];
//        if([isHavingMsg isEqualToString:@"Y"]){
//            [self showRedMsgBtn];
//        }else{
//            [self showNoMsgBtn];
//        }
}

-(void)showRedMsgBtn{
    RedBtn *btn = [[RedBtn alloc] initWithFrame:CGRectMake(0, 0, 57/2.0f, 57/2.0f)];
    [btn setBackgroundImage:[UIImage imageNamed:@"nav_bar_message.png"] forState:UIControlStateNormal];
    [btn addTarget:self action:@selector(showMsg) forControlEvents:UIControlEventTouchUpInside];
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:btn];
}

-(void)showNoMsgBtn{
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"nav_bar_message.png"] style:UIBarButtonItemStyleBordered target:self action:@selector(showMsg)];
    [self.navigationItem.rightBarButtonItem setTintColor:[UIColor whiteColor]];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


@end



